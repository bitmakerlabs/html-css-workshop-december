Step 1 - HTML basic structure

  - HTML5 DOCTYPE declaration
  - Where title appears
  - Where body appears

Step 2 - Adding Basic Block Level Elements

  - Block level elements take up as much space as is given, and by default, will have line breaks before and after
  - Add different levels of headings
  - Add paragraphs

Step 3 - Adding inline elements

  - Inline elements do not break lines before or after

Step 4 - Adding an image

  - Images are inline elements and do not require closing tag
  - Images will take up as much space as their dimensions dictate
  - What happens if we start to play with browser size?

Step 5 - Add logical divisions to content using div and span

  - div and span are widely used to divide areas up in logical groups so they can be manipulated easier
  - div is block level
  - span is inline
  - group things like content vs image, meta-data for article, add footer

Step 6 - Add semantics where possible

  - Semantic elements are for reinforcing the purpose or intention of the content
  - They don't imply any particular display characteristic by default

Step 7 - Add classes and/or IDs to help target content in preparation for styling

  - IDs should be used when the element is going to be unique on a given page
  - classes are used to group content together so we can efficiently target elements in a more global manner

Step 8 - Add inline CSS

  - what is CSS and what is the "cascade"
  - inline vs internal vs external

Step 9 - Move CSS to internal sheet

  - enclosed within the head tags
  - allows for more efficient targeting of elements

Step 10 - Move CSS to higher-level element (body) to affect more of the document

Step 11 - Add basic typography style to h1, p and footer

Step 12 - Target by class adding underline to h1





